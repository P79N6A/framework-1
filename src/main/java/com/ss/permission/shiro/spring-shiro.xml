<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="true">

	<!-- Shiro的Web过滤器 -->
	<!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/index.jsp" />
		<!-- 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为main.jsp了) -->
		<!-- <property name="successUrl" value="/system/main"/> -->
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->
		<property name="unauthorizedUrl" value="/" />
		<property name="filters">
			<map>
				<entry key="role">
					<bean
						class="com.framework.permission.shiro.filter.RoleAuthorizationFilter" />
				</entry>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login=anon
			</value>
		</property>
	</bean>
	<!-- 会话管理器 -->
	<!-- <bean id="sessionManager" -->
	<!-- class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> -->
	<!-- 扫描session线程,负责清理超时会话 -->
	<!-- <property name="sessionValidationSchedulerEnabled" value="false" /> -->
	<!-- 会话读写的实现 -->
	<!-- <property name="sessionDAO" ref="sessionDAO" /> -->
	<!-- globalSessionTimeout是会话存活时间(默认是30分钟) -->
	<!-- <property name="globalSessionTimeout" value="60000" /> -->
	<!-- <property name="deleteInvalidSessions" value="true" /> -->
	<!-- <property name="sessionValidationSchedulerEnabled" value="true" /> -->
	<!-- <property name="sessionIdCookieEnabled" value="true" /> -->
	<!-- <property name="sessionIdCookie" ref="sessionIdCookie" /> -->
	<!-- </bean> -->

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionManager" ref="sessionManager"></property> -->
		<!-- <property name="cacheManager" ref="cacheManager"></property> -->
	</bean>
	<bean id="sessionDAO" class="com.framework.permission.shiro.DataBaseSessionDao">
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- ========================cache============================== -->
	<!-- 安全框架缓存管理器 -->
	<!-- <bean id="shiroCacheManager" class="com.framework.permission.shiro.cache.ShiroCacheManager"> -->
	<!-- <property name="cacheManager" ref="cacheManager" /> -->
	<!-- </bean> -->

	<!-- 扩展缓存管理器 -->
	<!-- <bean id="cacheManager" -->
	<!-- class="com.framework.permission.shiro.cache.impl.CacheManagerImpl"> -->
	<!-- <constructor-arg ref="memcachedClient" /> -->
	<!-- </bean> -->
	<!-- ========================cache============================== -->
</beans>
